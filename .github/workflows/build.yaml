on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'  # Add tag trigger
env:
  GO_VERSION: '1.24.5'
  REGISTRY: ghcr.io

jobs:
  test-and-lint:
    name: lint
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.version }}
      oci_repository: ${{ steps.vars.outputs.oci_repository }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.2.2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Version and lower repo name
        id: vars
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}

          if git describe --tags --exact-match >/dev/null 2>&1; then
            VERSION=$(git describe --tags --exact-match)
          elif LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null); then
            VERSION=${LAST_TAG}
          else
            SHORT_HASH=$(git rev-parse --short HEAD)
            VERSION="0.0.0-${BRANCH}-${SHORT_HASH}"
          fi
          
          OCI_REPOSITORY=$(echo "${REGISTRY}/${{ github.repository }}" | tr '[:upper:]' '[:lower:]')

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "oci_repository=${OCI_REPOSITORY}" >> $GITHUB_OUTPUT
          echo "Version: ${VERSION}"
          echo "OCI Repository: ${OCI_REPOSITORY}"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.vars.outputs.oci_repository }}/health-proxy:${{ steps.vars.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
